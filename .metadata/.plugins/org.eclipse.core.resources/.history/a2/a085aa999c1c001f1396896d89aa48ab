package Chap2_기본자료구조;

import java.util.Arrays;
//교재 67 - 실습 2-5
//2번 실습
import java.util.Random;
public class 실습2_5정수배열정렬 {
	static int top = 0;
	static final int MAX_LENGTH = 20;
	
	public static void main(String[] args) {
		float []data = new float[MAX_LENGTH];// 0.0 ~ 1.0 사이의 실수를 저장
		inputData(data, 10);//10개의 난수를 입력
		showData(data);//top 개수 만큼 출력
		
		reverse(data);//역순으로 재배치 - 교재 67페이지 참조
		
//		sysout(Arrays.toString(data));// 교재 84페이지 코드 참조, Array 컬렉션
//		sortData(data);//교재 205 bubbleSort() 함수 코드를 사용 - 올림차순으로 정렬
//		showData(data);
//		float realData = 실수 난수 생성;
//		insertData(data, realData);//정렬된 배열에 삽입
//		showData(data);
	}
	
	static void showData(float[] data) {//실수 배열을 top 갯수만 출력
		for(int i = 0; i < top; i++) {
			System.out.println("data stack: " + data[i] + " ");
		}
	}
	
	static void inputData(float[] data, int count) {
		//난수 실수를 입력
		Random rnd = new Random();
		
		for(int i = 0; i < count; i++) {
			data[top + i] = rnd.nextFloat() * 100;
		} 
		top += count;
	}
	
	static void reverse(float[] data) {//역순으로 재배치, length -> top 으로 변경
		float[] tmp = data; 
		
		for(int i = 0; i < top; i++) {
			data[i] = tmp[top-i-1];
			System.out.println(data[i]);
		}
		
	}
	
//	swap() {//교재 67페이지 - 맞교환
//		
//	}
//	static void sortData(float[]data) {//올림차순으로 정렬
//
//	}
//	insertData() {//insert되는 실수 값이 insert될 위치를 찾아 보다 큰 값은 우측으로 이동

//	}

	
}
